// ----------------------------------------------------------------------------------
// Microsoft Developer & Platform Evangelism
// 
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
// THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, 
// EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES 
// OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
// ----------------------------------------------------------------------------------
// The example companies, organizations, products, domain names,
// e-mail addresses, logos, people, places, and events depicted
// herein are fictitious.  No association with any real company,
// organization, product, domain name, email address, logo, person,
// places, or events is intended or should be inferred.
// ----------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WeatherInfo", Namespace="http://schemas.datacontract.org/2004/07/RelyingParty")]
    [System.SerializableAttribute()]
    public partial class WeatherInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceReference1.Weather[] ForecastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObservatoryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceReference1.Weather[] Forecast {
            get {
                return this.ForecastField;
            }
            set {
                if ((object.ReferenceEquals(this.ForecastField, value) != true)) {
                    this.ForecastField = value;
                    this.RaisePropertyChanged("Forecast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Observatory {
            get {
                return this.ObservatoryField;
            }
            set {
                if ((object.ReferenceEquals(this.ObservatoryField, value) != true)) {
                    this.ObservatoryField = value;
                    this.RaisePropertyChanged("Observatory");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Weather", Namespace="http://schemas.datacontract.org/2004/07/RelyingParty")]
    public enum Weather : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sunny = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cloudy = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Snowy = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rainy = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IWeatherService")]
    public interface IWeatherService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/GetThreeDaysForecast", ReplyAction="http://tempuri.org/IWeatherService/GetThreeDaysForecastResponse")]
        Client.ServiceReference1.WeatherInfo GetThreeDaysForecast(int zipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/GetTenDaysForecast", ReplyAction="http://tempuri.org/IWeatherService/GetTenDaysForecastResponse")]
        Client.ServiceReference1.WeatherInfo GetTenDaysForecast(int zipCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWeatherServiceChannel : Client.ServiceReference1.IWeatherService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WeatherServiceClient : System.ServiceModel.ClientBase<Client.ServiceReference1.IWeatherService>, Client.ServiceReference1.IWeatherService {
        
        public WeatherServiceClient() {
        }
        
        public WeatherServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WeatherServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.ServiceReference1.WeatherInfo GetThreeDaysForecast(int zipCode) {
            return base.Channel.GetThreeDaysForecast(zipCode);
        }
        
        public Client.ServiceReference1.WeatherInfo GetTenDaysForecast(int zipCode) {
            return base.Channel.GetTenDaysForecast(zipCode);
        }
    }
}
